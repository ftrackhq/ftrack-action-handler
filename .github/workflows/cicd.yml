name: Release to Pypi

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build package distribution
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Build
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          python setup.py sdist bdist_wheel --universal
          twine check dist/*
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  publish-test:
    name: Publish to PyPi (test)
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: staging
      url: https://test.pypi.org/project/ftrack-action-handler/
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish to Test PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  publish-prod:
    name: Publish to PyPi (prod)
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
      url: https://pypi.org/project/ftrack-action-handler/
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}